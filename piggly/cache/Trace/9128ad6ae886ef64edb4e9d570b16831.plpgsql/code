DECLARE
    akey NAME[];
    keys TEXT[] := '{}';
    have TEXT;
BEGIN
    perform public.piggly_branch($PIGGLY$8558893cd4793d8a$PIGGLY$);
    FOR akey IN SELECT * FROM _keys($1, $2) LOOP
        perform public.piggly_cond($PIGGLY$38794ad31a594d01$PIGGLY$, true);
        perform public.piggly_branch($PIGGLY$166175f5f9052d48$PIGGLY$);
        IF public.piggly_cond($PIGGLY$f960d642d413a959$PIGGLY$, (akey = $3)) THEN perform public.piggly_branch($PIGGLY$218059868425595e$PIGGLY$);perform public.piggly_branch($PIGGLY$ce3475e053fc646a$PIGGLY$);RETURN pass($4); END IF;
        keys = keys || akey::text;
    
        perform public.piggly_signal($PIGGLY$38794ad31a594d01$PIGGLY$, $PIGGLY$@$PIGGLY$);
    END LOOP;
perform public.piggly_cond($PIGGLY$38794ad31a594d01$PIGGLY$, false);
    IF public.piggly_cond($PIGGLY$e53fbff7c0e0cf69$PIGGLY$, (array_upper(keys, 0) = 1)) THEN
        perform public.piggly_branch($PIGGLY$81dbbcc707f45c7f$PIGGLY$);
        have := 'No ' || $5 || ' constraints';
    ELSE
        perform public.piggly_branch($PIGGLY$ec53dbda80bcde86$PIGGLY$);
        have := array_to_string(keys, E'\n              ');
    END IF;

    perform public.piggly_branch($PIGGLY$85421a07923f6fac$PIGGLY$);RETURN fail($4) || E'\n' || diag(
             '        have: ' || have
       || E'\n        want: ' || CASE WHEN $3 IS NULL THEN 'NULL' ELSE $3::text END
    );
END;